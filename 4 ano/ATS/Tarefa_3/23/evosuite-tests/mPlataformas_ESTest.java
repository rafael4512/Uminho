/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 11 23:27:08 GMT 2021
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.NoSuchElementException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class mPlataformas_ESTest extends mPlataformas_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SystemInUtil.addInputLine("\n6: Voltar atr\u00E1s\n");
      mPlataformas mPlataformas0 = new mPlataformas();
      // Undeclared exception!
      try { 
        mPlataformas0.menuDataI();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      mPlataformas mPlataformas0 = new mPlataformas();
      SystemInUtil.addInputLine("Z J|XIm2R&9XEQI");
      // Undeclared exception!
      try { 
        mPlataformas0.menuDataF();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SystemInUtil.addInputLine("%@kF;(Gp&#B-");
      mPlataformas mPlataformas0 = new mPlataformas();
      mPlataformas0.menuAlterarPW();
      mPlataformas0.getPW();
      assertFalse(mPlataformas0.getTM());
      assertEquals(0.0, mPlataformas0.getPrecoPorKM(), 0.01);
      assertEquals(0.0, mPlataformas0.getRaio(), 0.01);
      assertEquals(0, mPlataformas0.getCapacidade());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SystemInUtil.addInputLine("DNU~");
      mPlataformas mPlataformas0 = new mPlataformas();
      // Undeclared exception!
      try { 
        mPlataformas0.menuLoja();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      mPlataformas mPlataformas0 = new mPlataformas();
      SystemInUtil.addInputLine("vceFRFxt");
      // Undeclared exception!
      try { 
        mPlataformas0.menuVoluntariosDefinicoes();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SystemInUtil.addInputLine("8");
      mPlataformas mPlataformas0 = new mPlataformas();
      mPlataformas0.menuVoluntariosDefinicoes();
      assertEquals(8, mPlataformas0.getOpcao());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      mPlataformas mPlataformas0 = new mPlataformas();
      SystemInUtil.addInputLine("\n6: Voltar atr\u00E1s\n");
      // Undeclared exception!
      try { 
        mPlataformas0.menuVoluntarios();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      mPlataformas mPlataformas0 = new mPlataformas();
      SystemInUtil.addInputLine("No");
      mPlataformas0.menuValidarTM();
      assertEquals(0.0, mPlataformas0.getRaio(), 0.01);
      assertEquals(0.0, mPlataformas0.getPrecoPorKM(), 0.01);
      assertFalse(mPlataformas0.getTM());
      assertEquals(0, mPlataformas0.getCapacidade());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      mPlataformas mPlataformas0 = new mPlataformas();
      SystemInUtil.addInputLine("\n6: Voltar atr\u00E1s\n");
      // Undeclared exception!
      try { 
        mPlataformas0.menuValidarTM();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SystemInUtil.addInputLine("Yes");
      mPlataformas mPlataformas0 = new mPlataformas();
      assertFalse(mPlataformas0.getTM());
      
      mPlataformas0.menuValidarTM();
      boolean boolean0 = mPlataformas0.getTM();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SystemInUtil.addInputLine(" -VBHln!<`RXeLRj");
      mPlataformas mPlataformas0 = new mPlataformas();
      // Undeclared exception!
      try { 
        mPlataformas0.menuAlterarPrecoPorKM();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SystemInUtil.addInputLine("48");
      mPlataformas mPlataformas0 = new mPlataformas();
      mPlataformas0.menuAlterarPrecoPorKM();
      assertEquals(48.0, mPlataformas0.getPrecoPorKM(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SystemInUtil.addInputLine("5: Registo de entregas realizadas num certo per\u00EDodo de tempo\n");
      mPlataformas mPlataformas0 = new mPlataformas();
      // Undeclared exception!
      try { 
        mPlataformas0.menuAlterarCapacidade();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SystemInUtil.addInputLine("0");
      mPlataformas mPlataformas0 = new mPlataformas();
      mPlataformas0.menuAlterarCapacidade();
      assertEquals(0.0, mPlataformas0.getRaio(), 0.01);
      assertEquals(0, mPlataformas0.getCapacidade());
      assertEquals(0.0, mPlataformas0.getPrecoPorKM(), 0.01);
      assertFalse(mPlataformas0.getTM());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      mPlataformas mPlataformas0 = new mPlataformas();
      SystemInUtil.addInputLine("\n6: Voltar atr\u00E1s\n");
      // Undeclared exception!
      try { 
        mPlataformas0.menuAlterarRaio();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SystemInUtil.addInputLine("No");
      mPlataformas mPlataformas0 = new mPlataformas();
      // Undeclared exception!
      try { 
        mPlataformas0.menuTransportadorasDefinicoes();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      mPlataformas mPlataformas0 = new mPlataformas();
      SystemInUtil.addInputLine("8");
      mPlataformas0.menuTransportadorasDefinicoes();
      assertEquals(8, mPlataformas0.getOpcao());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      mPlataformas mPlataformas0 = new mPlataformas();
      SystemInUtil.addInputLine("\n6: Voltar atr\u00E1s\n");
      // Undeclared exception!
      try { 
        mPlataformas0.menuTransportadoras();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SystemInUtil.addInputLine("8");
      mPlataformas mPlataformas0 = new mPlataformas();
      mPlataformas0.menuLoja();
      assertEquals(8, mPlataformas0.getOpcao());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      mPlataformas mPlataformas0 = new mPlataformas();
      boolean boolean0 = mPlataformas0.getTM();
      assertFalse(boolean0);
      assertEquals(0, mPlataformas0.getCapacidade());
      assertEquals(0.0, mPlataformas0.getPrecoPorKM(), 0.01);
      assertEquals(0.0, mPlataformas0.getRaio(), 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      mPlataformas mPlataformas0 = new mPlataformas();
      // Undeclared exception!
      try { 
        mPlataformas0.menuAlterarPW();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      mPlataformas mPlataformas0 = new mPlataformas();
      double double0 = mPlataformas0.getRaio();
      assertEquals(0.0, mPlataformas0.getPrecoPorKM(), 0.01);
      assertFalse(mPlataformas0.getTM());
      assertEquals(0.0, double0, 0.01);
      assertEquals(0, mPlataformas0.getCapacidade());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      mPlataformas mPlataformas0 = new mPlataformas();
      double double0 = mPlataformas0.getPrecoPorKM();
      assertEquals(0.0, double0, 0.01);
      assertEquals(0, mPlataformas0.getCapacidade());
      assertFalse(mPlataformas0.getTM());
      assertEquals(0.0, mPlataformas0.getRaio(), 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      mPlataformas mPlataformas0 = new mPlataformas();
      int int0 = mPlataformas0.getCapacidade();
      assertEquals(0, int0);
      assertEquals(0.0, mPlataformas0.getRaio(), 0.01);
      assertEquals(0.0, mPlataformas0.getPrecoPorKM(), 0.01);
      assertFalse(mPlataformas0.getTM());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      mPlataformas mPlataformas0 = new mPlataformas();
      mPlataformas0.getPW();
      assertEquals(0.0, mPlataformas0.getPrecoPorKM(), 0.01);
      assertEquals(0, mPlataformas0.getCapacidade());
      assertFalse(mPlataformas0.getTM());
      assertEquals(0.0, mPlataformas0.getRaio(), 0.01);
  }
}
