/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 11 23:30:41 GMT 2021
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class EncomendasAceites_ESTest extends EncomendasAceites_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EncomendasAceites encomendasAceites0 = new EncomendasAceites("");
      EncomendasAceites encomendasAceites1 = new EncomendasAceites(encomendasAceites0);
      assertTrue(encomendasAceites1.equals((Object)encomendasAceites0));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EncomendasAceites encomendasAceites0 = new EncomendasAceites("V#;?m");
      String string0 = encomendasAceites0.getCodEncomenda();
      assertEquals("V#;?m", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EncomendasAceites encomendasAceites0 = null;
      try {
        encomendasAceites0 = new EncomendasAceites((EncomendasAceites) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("EncomendasAceites", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EncomendasAceites encomendasAceites0 = new EncomendasAceites();
      String string0 = encomendasAceites0.getCodEncomenda();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EncomendasAceites encomendasAceites0 = new EncomendasAceites();
      boolean boolean0 = encomendasAceites0.equals("Aceite:null");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EncomendasAceites encomendasAceites0 = new EncomendasAceites();
      boolean boolean0 = encomendasAceites0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EncomendasAceites encomendasAceites0 = new EncomendasAceites();
      boolean boolean0 = encomendasAceites0.equals(encomendasAceites0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EncomendasAceites encomendasAceites0 = new EncomendasAceites();
      String string0 = encomendasAceites0.toStringCSV();
      assertEquals("Aceite:", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EncomendasAceites encomendasAceites0 = new EncomendasAceites();
      String string0 = encomendasAceites0.toString();
      assertEquals("C\u00F3digo de encomenda: \n", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EncomendasAceites encomendasAceites0 = new EncomendasAceites();
      EncomendasAceites encomendasAceites1 = encomendasAceites0.clone();
      assertTrue(encomendasAceites1.equals((Object)encomendasAceites0));
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EncomendasAceites encomendasAceites0 = new EncomendasAceites();
      EncomendasAceites encomendasAceites1 = new EncomendasAceites((String) null);
      // Undeclared exception!
      try { 
        encomendasAceites0.equals(encomendasAceites1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EncomendasAceites encomendasAceites0 = new EncomendasAceites();
      encomendasAceites0.setCodEncomenda((String) null);
      String string0 = encomendasAceites0.getCodEncomenda();
      assertNull(string0);
  }
}
