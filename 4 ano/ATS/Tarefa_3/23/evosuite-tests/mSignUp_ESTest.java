/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 11 23:35:53 GMT 2021
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.NoSuchElementException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class mSignUp_ESTest extends mSignUp_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SystemInUtil.addInputLine("_'Jcv`]!OT");
      mSignUp mSignUp0 = new mSignUp();
      // Undeclared exception!
      try { 
        mSignUp0.mostrarMenuSignUpV();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      mSignUp mSignUp0 = new mSignUp();
      SystemInUtil.addInputLine("");
      // Undeclared exception!
      try { 
        mSignUp0.mostrarMenuSignUpU();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SystemInUtil.addInputLine("");
      mSignUp mSignUp0 = new mSignUp();
      // Undeclared exception!
      try { 
        mSignUp0.mostrarMenuSignUpT();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SystemInUtil.addInputLine("\nTransporte de medicamentos (Yes/No)");
      mSignUp mSignUp0 = new mSignUp();
      // Undeclared exception!
      try { 
        mSignUp0.mostrarMenuSignUpL();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SystemInUtil.addInputLine("B&86'Jj[`u)>c{");
      mSignUp mSignUp0 = new mSignUp();
      // Undeclared exception!
      try { 
        mSignUp0.escolhaMenu();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      mSignUp mSignUp0 = new mSignUp();
      SystemInUtil.addInputLine("3 Tf9nsporttdora");
      mSignUp0.escolhaMenu();
      assertEquals(3, mSignUp0.getOpcao());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      mSignUp mSignUp0 = new mSignUp();
      double double0 = mSignUp0.getRaio();
      assertEquals(0.0, double0, 0.01);
      assertFalse(mSignUp0.getTransporteMedicamentos());
      assertEquals(0.0, mSignUp0.getPrecoPorKM(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      mSignUp mSignUp0 = new mSignUp();
      mSignUp0.getNome();
      assertEquals(0.0, mSignUp0.getRaio(), 0.01);
      assertFalse(mSignUp0.getTransporteMedicamentos());
      assertEquals(0.0, mSignUp0.getPrecoPorKM(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      mSignUp mSignUp0 = new mSignUp();
      mSignUp0.getGPS();
      assertEquals(0.0, mSignUp0.getRaio(), 0.01);
      assertFalse(mSignUp0.getTransporteMedicamentos());
      assertEquals(0.0, mSignUp0.getPrecoPorKM(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      mSignUp mSignUp0 = new mSignUp();
      mSignUp0.getCodigo();
      assertEquals(0.0, mSignUp0.getRaio(), 0.01);
      assertFalse(mSignUp0.getTransporteMedicamentos());
      assertEquals(0.0, mSignUp0.getPrecoPorKM(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      mSignUp mSignUp0 = new mSignUp();
      mSignUp0.getNIF();
      assertEquals(0.0, mSignUp0.getRaio(), 0.01);
      assertEquals(0.0, mSignUp0.getPrecoPorKM(), 0.01);
      assertFalse(mSignUp0.getTransporteMedicamentos());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      mSignUp mSignUp0 = new mSignUp();
      boolean boolean0 = mSignUp0.getTransporteMedicamentos();
      assertFalse(boolean0);
      assertEquals(0.0, mSignUp0.getPrecoPorKM(), 0.01);
      assertEquals(0.0, mSignUp0.getRaio(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      mSignUp mSignUp0 = new mSignUp();
      double double0 = mSignUp0.getPrecoPorKM();
      assertFalse(mSignUp0.getTransporteMedicamentos());
      assertEquals(0.0, mSignUp0.getRaio(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      mSignUp mSignUp0 = new mSignUp();
      mSignUp0.getEmail();
      assertFalse(mSignUp0.getTransporteMedicamentos());
      assertEquals(0.0, mSignUp0.getRaio(), 0.01);
      assertEquals(0.0, mSignUp0.getPrecoPorKM(), 0.01);
  }
}
