/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 11 23:41:46 GMT 2021
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.NoSuchElementException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class mCliente_ESTest extends mCliente_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SystemInUtil.addInputLine(", ");
      mCliente mCliente0 = new mCliente();
      // Undeclared exception!
      try { 
        mCliente0.menuInserirEncomenda();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SystemInUtil.addInputLine("tr=");
      mCliente mCliente0 = new mCliente();
      // Undeclared exception!
      try { 
        mCliente0.menuDataI();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      mCliente mCliente0 = new mCliente();
      SystemInUtil.addInputLine(":[ <0NZF\f");
      // Undeclared exception!
      try { 
        mCliente0.menuDataF();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      mCliente mCliente0 = new mCliente();
      SystemInUtil.addInputLine("2: Inserir pedido de encomenda\n");
      // Undeclared exception!
      try { 
        mCliente0.menuAlterarLocalizacao();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      mCliente mCliente0 = new mCliente();
      SystemInUtil.addInputLine(")");
      mCliente0.menuAlterarPW();
      mCliente0.getPassword();
      assertFalse(mCliente0.getFlagPE());
      assertFalse(mCliente0.getFlagTM());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      mCliente mCliente0 = new mCliente();
      assertFalse(mCliente0.getFlagPE());
      
      mCliente0.setFlagPE(true);
      boolean boolean0 = mCliente0.getFlagPE();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SystemInUtil.addInputLine("true");
      mCliente mCliente0 = new mCliente();
      mCliente0.menuAlterarEmail();
      mCliente0.getEmail();
      assertFalse(mCliente0.getFlagTM());
      assertFalse(mCliente0.getFlagPE());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SystemInUtil.addInputLine("Yes");
      mCliente mCliente0 = new mCliente();
      assertFalse(mCliente0.getFlagPE());
      
      mCliente0.menuEntregaT();
      mCliente0.getCodigoT();
      assertTrue(mCliente0.getFlagPE());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SystemInUtil.addInputLine("false");
      mCliente mCliente0 = new mCliente();
      mCliente0.menuRegistoV();
      mCliente0.getCodigoRegisto();
      assertFalse(mCliente0.getFlagTM());
      assertFalse(mCliente0.getFlagPE());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SystemInUtil.addInputLine("true");
      mCliente mCliente0 = new mCliente();
      // Undeclared exception!
      try { 
        mCliente0.menuEncomenda();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SystemInUtil.addInputLine("true");
      mCliente mCliente0 = new mCliente();
      // Undeclared exception!
      try { 
        mCliente0.menuDefinicoes();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SystemInUtil.addInputLine("32");
      mCliente mCliente0 = new mCliente();
      mCliente0.menuDefinicoes();
      assertEquals(32, mCliente0.getOpcao());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SystemInUtil.addInputLine("c-LY=<]|i?7bi");
      mCliente mCliente0 = new mCliente();
      // Undeclared exception!
      try { 
        mCliente0.menuClassificacoes();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SystemInUtil.addInputLine("3");
      mCliente mCliente0 = new mCliente();
      mCliente0.menuClassificacoes();
      assertEquals(3, mCliente0.getOpcao());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SystemInUtil.addInputLine("true");
      mCliente mCliente0 = new mCliente();
      // Undeclared exception!
      try { 
        mCliente0.menuRegistoEscolha();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SystemInUtil.addInputLine("3");
      mCliente mCliente0 = new mCliente();
      mCliente0.menuRegistoEscolha();
      assertEquals(3, mCliente0.getOpcao());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SystemInUtil.addInputLine("true");
      mCliente mCliente0 = new mCliente();
      // Undeclared exception!
      try { 
        mCliente0.menuInformacoesAdicionais();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SystemInUtil.addInputLine("6");
      mCliente mCliente0 = new mCliente();
      mCliente0.menuInformacoesAdicionais();
      assertEquals(6, mCliente0.getOpcao());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SystemInUtil.addInputLine("false");
      mCliente mCliente0 = new mCliente();
      mCliente0.setFlag(true);
      // Undeclared exception!
      try { 
        mCliente0.menuPedirEntrega();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      mCliente mCliente0 = new mCliente();
      assertFalse(mCliente0.getFlag());
      
      mCliente0.menuPedirEntrega();
      assertFalse(mCliente0.getFlagPE());
      assertFalse(mCliente0.getFlagTM());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      mCliente mCliente0 = new mCliente();
      mCliente0.menuEstadoEncomenda();
      assertFalse(mCliente0.getFlagPE());
      assertFalse(mCliente0.getFlagTM());
      assertFalse(mCliente0.getFlag());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SystemInUtil.addInputLine("1");
      mCliente mCliente0 = new mCliente();
      mCliente0.menuEncomenda();
      assertEquals(1, mCliente0.getOpcao());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SystemInUtil.addInputLine("true");
      mCliente mCliente0 = new mCliente();
      // Undeclared exception!
      try { 
        mCliente0.escolhaMenu();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SystemInUtil.addInputLine("78");
      mCliente mCliente0 = new mCliente();
      mCliente0.escolhaMenu();
      assertEquals(78, mCliente0.getOpcao());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      mCliente mCliente0 = new mCliente();
      mCliente0.getPassword();
      assertFalse(mCliente0.getFlagPE());
      assertFalse(mCliente0.getFlagTM());
      assertFalse(mCliente0.getFlag());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      mCliente mCliente0 = new mCliente();
      // Undeclared exception!
      try { 
        mCliente0.menuAlterarPW();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      mCliente mCliente0 = new mCliente();
      mCliente0.getCodigoL();
      assertFalse(mCliente0.getFlagTM());
      assertFalse(mCliente0.getFlag());
      assertFalse(mCliente0.getFlagPE());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      mCliente mCliente0 = new mCliente();
      // Undeclared exception!
      try { 
        mCliente0.menuEntregaT();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      mCliente mCliente0 = new mCliente();
      assertFalse(mCliente0.getFlag());
      
      mCliente0.setFlag(true);
      mCliente0.menuEstadoEncomenda();
      assertTrue(mCliente0.getFlag());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      mCliente mCliente0 = new mCliente();
      mCliente0.getGPS();
      assertFalse(mCliente0.getFlag());
      assertFalse(mCliente0.getFlagPE());
      assertFalse(mCliente0.getFlagTM());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      mCliente mCliente0 = new mCliente();
      mCliente0.getCodigoT();
      assertFalse(mCliente0.getFlag());
      assertFalse(mCliente0.getFlagTM());
      assertFalse(mCliente0.getFlagPE());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      mCliente mCliente0 = new mCliente();
      mCliente0.getEmail();
      assertFalse(mCliente0.getFlagTM());
      assertFalse(mCliente0.getFlag());
      assertFalse(mCliente0.getFlagPE());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      mCliente mCliente0 = new mCliente();
      boolean boolean0 = mCliente0.getFlagTM();
      assertFalse(mCliente0.getFlagPE());
      assertFalse(boolean0);
      assertFalse(mCliente0.getFlag());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      mCliente mCliente0 = new mCliente();
      boolean boolean0 = mCliente0.getFlagPE();
      assertFalse(boolean0);
      assertFalse(mCliente0.getFlag());
      assertFalse(mCliente0.getFlagTM());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      mCliente mCliente0 = new mCliente();
      mCliente0.getCodigoRegisto();
      assertFalse(mCliente0.getFlagPE());
      assertFalse(mCliente0.getFlagTM());
      assertFalse(mCliente0.getFlag());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      mCliente mCliente0 = new mCliente();
      mCliente0.getCodigoE();
      assertFalse(mCliente0.getFlag());
      assertFalse(mCliente0.getFlagPE());
      assertFalse(mCliente0.getFlagTM());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      mCliente mCliente0 = new mCliente();
      boolean boolean0 = mCliente0.getFlag();
      assertFalse(mCliente0.getFlagPE());
      assertFalse(mCliente0.getFlagTM());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      mCliente mCliente0 = new mCliente();
      mCliente0.getCodigoTia();
      assertFalse(mCliente0.getFlagPE());
      assertFalse(mCliente0.getFlagTM());
      assertFalse(mCliente0.getFlag());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      mCliente mCliente0 = new mCliente();
      // Undeclared exception!
      try { 
        mCliente0.menuRegistoV();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      mCliente mCliente0 = new mCliente();
      // Undeclared exception!
      try { 
        mCliente0.menuAlterarEmail();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }
}
