/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 11 23:43:36 GMT 2021
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BDTransportes_ESTest extends BDTransportes_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EmpresaTransportes empresaTransportes0 = new EmpresaTransportes();
      ArrayList<Encomenda> arrayList0 = empresaTransportes0.getRegistos();
      EmpresaTransportes empresaTransportes1 = new EmpresaTransportes("-------------Volunt\u00E1rios------------------------ \n", "hs)-[YDMDQw<<Lgn~", "Nome da loja: ", "wUPLQ-s5{U5D/", 4447, 4447, "", 886.756962, 0.2, 4447, arrayList0, false, 886.756962, 1, false, 1, 4447);
      HashMap<String, EmpresaTransportes> hashMap0 = new HashMap<String, EmpresaTransportes>();
      hashMap0.put("", empresaTransportes1);
      BDUtilizador bDUtilizador0 = new BDUtilizador();
      Set<String> set0 = bDUtilizador0.getCodigos();
      BDTransportes bDTransportes0 = new BDTransportes(hashMap0, set0);
      Loja loja0 = new Loja();
      Utilizador utilizador0 = new Utilizador("", "-------------Volunt\u00E1rios------------------------ \n", "-------------Volunt\u00E1rios------------------------ \n", "C+4}", 4447, (-616.5241), arrayList0);
      List<EmpresaTransportes> list0 = bDTransportes0.transDisponiveisMedParse(loja0, utilizador0);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EmpresaTransportes empresaTransportes0 = new EmpresaTransportes();
      ArrayList<Encomenda> arrayList0 = empresaTransportes0.getRota();
      Loja loja0 = new Loja("QEMGE%yY", "QEMGE%yY", "9qIw>njA;Ri}", "QEMGE%yY", 0.0, 12, 0.0, arrayList0, 12);
      BDTransportes bDTransportes0 = new BDTransportes();
      EmpresaTransportes empresaTransportes1 = new EmpresaTransportes("QagV{}", "QagV{}", "", "\n", 0, 0, "", 0, 12, 1402.0, arrayList0, true, 12, (-1115), false, 0, 0);
      HashMap<String, EmpresaTransportes> hashMap0 = new HashMap<String, EmpresaTransportes>();
      hashMap0.put("\"n<.6e27PQ%1Kal<~", empresaTransportes1);
      bDTransportes0.setTransportes(hashMap0);
      Utilizador utilizador0 = new Utilizador();
      List<EmpresaTransportes> list0 = bDTransportes0.transDisponiveis(loja0, utilizador0);
      assertFalse(list0.contains(empresaTransportes1));
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HashMap<String, EmpresaTransportes> hashMap0 = new HashMap<String, EmpresaTransportes>();
      EmpresaTransportes empresaTransportes0 = new EmpresaTransportes();
      ArrayList<Encomenda> arrayList0 = empresaTransportes0.getRota();
      EmpresaTransportes empresaTransportes1 = new EmpresaTransportes("QEMGE%yY", "QEMGE%yY", "^B_ySF`uR", "QEMGE%yY", 0, 125.2138784, "QEMGE%yY", 0.0, 125.2138784, 125.2138784, arrayList0, true, 125.2138784, 0, true, 0, 0);
      hashMap0.put("QEMGE%yY", empresaTransportes1);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      BDTransportes bDTransportes0 = new BDTransportes(hashMap0, linkedHashSet0);
      Utilizador utilizador0 = new Utilizador("^B_ySF`uR", "QEMGE%yY", "^B_ySF`uR", "QEMGE%yY", 125.2138784, 0, arrayList0);
      Loja loja0 = new Loja();
      String string0 = bDTransportes0.printEmpresasMed(utilizador0, loja0, 0);
      assertEquals("^B_ySF`uR ---> QEMGE%yY || RATE --> 125.2138784 || CUSTO: 31357.030687939972\n", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BDTransportes bDTransportes0 = new BDTransportes();
      Utilizador utilizador0 = new Utilizador();
      ArrayList<Encomenda> arrayList0 = utilizador0.getEncomendas();
      EmpresaTransportes empresaTransportes0 = new EmpresaTransportes("Transportadora", "Transportadora", "Custo por km: ", "Transportadora", 0, 2142.378559402, "RNPVnFEY6//.?", 0, 0, 2444.0685936686878, arrayList0, true, 835.215963424025, 0, true, 1, 0);
      HashMap<String, EmpresaTransportes> hashMap0 = new HashMap<String, EmpresaTransportes>();
      hashMap0.put("By!Q@d2R*mm", empresaTransportes0);
      bDTransportes0.setTransportes(hashMap0);
      Utilizador utilizador1 = new Utilizador("RNPVnFEY6//.?", "Custo por km: ", "Password incorreta", "{i\"*0{", 0.2, 835.215963424025, arrayList0);
      Loja loja0 = new Loja();
      String string0 = bDTransportes0.printEmpresas(utilizador1, loja0, 1.0);
      assertEquals("Custo por km:  ---> Transportadora || RATE --> 835.215963424025 || CUSTO: 1789349.0238111035\n", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HashMap<String, EmpresaTransportes> hashMap0 = new HashMap<String, EmpresaTransportes>();
      EmpresaTransportes empresaTransportes0 = new EmpresaTransportes();
      ArrayList<Encomenda> arrayList0 = empresaTransportes0.getRota();
      EmpresaTransportes empresaTransportes1 = new EmpresaTransportes("QEMGE%yY", "QEMGE%yY", "QEMGE%yY", "QEMGE%yY", 0, 0, "QEMGE%yY", 0.0, 0, 0, arrayList0, false, 0, 0, true, 0, 0);
      hashMap0.put("QEMGE%yY", empresaTransportes1);
      BDTransportes bDTransportes0 = new BDTransportes();
      bDTransportes0.setTransportes(hashMap0);
      Utilizador utilizador0 = new Utilizador("QEMGE%yY", "QEMGE%yY", "QEMGE%yY", "QEMGE%yY", 0, 0.0, arrayList0);
      Loja loja0 = new Loja();
      String string0 = bDTransportes0.printEmpresas(utilizador0, loja0, 1.0);
      assertEquals("QEMGE%yY ---> QEMGE%yY || RATE --> 0.0 || CUSTO: 0.2\n", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HashMap<String, EmpresaTransportes> hashMap0 = new HashMap<String, EmpresaTransportes>();
      BDUtilizador bDUtilizador0 = new BDUtilizador();
      Set<String> set0 = bDUtilizador0.getCodigos();
      BDTransportes bDTransportes0 = new BDTransportes(hashMap0, set0);
      bDTransportes0.setCodigos(set0);
      assertEquals(0, set0.size());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HashMap<String, EmpresaTransportes> hashMap0 = new HashMap<String, EmpresaTransportes>();
      EmpresaTransportes empresaTransportes0 = new EmpresaTransportes();
      ArrayList<Encomenda> arrayList0 = empresaTransportes0.getRota();
      EmpresaTransportes empresaTransportes1 = new EmpresaTransportes("QEMGE%yY", "QEMGE%yY", "QEMGE%yY", "QEMGE%yY", 44, 44, "QEMGE%yY", 44, 44, 44, arrayList0, false, 44, 44, false, 44, 44);
      hashMap0.put("QEMGE%yY", empresaTransportes1);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      BDTransportes bDTransportes0 = new BDTransportes(hashMap0, linkedHashSet0);
      EmpresaTransportes empresaTransportes2 = bDTransportes0.tryLogin("QEMGE%yY", "QEMGE%yY");
      assertEquals(44.0, empresaTransportes2.getCusto_km(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BDTransportes bDTransportes0 = new BDTransportes();
      EmpresaTransportes empresaTransportes0 = new EmpresaTransportes();
      bDTransportes0.updateTransportes2(empresaTransportes0);
      EmpresaTransportes empresaTransportes1 = bDTransportes0.tryLogin("", "");
      assertEquals(0.0, empresaTransportes1.getClassificao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BDTransportes bDTransportes0 = new BDTransportes();
      EmpresaTransportes empresaTransportes0 = new EmpresaTransportes();
      bDTransportes0.updateTransportes2(empresaTransportes0);
      Map<String, EmpresaTransportes> map0 = bDTransportes0.getTransportes();
      assertEquals(1, map0.size());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HashMap<String, EmpresaTransportes> hashMap0 = new HashMap<String, EmpresaTransportes>();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      EmpresaTransportes empresaTransportes0 = new EmpresaTransportes();
      ArrayList<Encomenda> arrayList0 = empresaTransportes0.getRota();
      EmpresaTransportes empresaTransportes1 = new EmpresaTransportes((String) null, "f", "gw}m", "gw}m", 384, 384, "C\u00F3digo de volunt\u00E1rio: ", 0.0, 3956.0, 30.646652420514627, arrayList0, true, 3956.0, 384, true, 0, 0);
      hashMap0.put((String) null, empresaTransportes1);
      BDTransportes bDTransportes0 = new BDTransportes(hashMap0, linkedHashSet0);
      String string0 = bDTransportes0.getEmail("gw}m");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HashMap<String, EmpresaTransportes> hashMap0 = new HashMap<String, EmpresaTransportes>();
      Locale.IsoCountryCode locale_IsoCountryCode0 = Locale.IsoCountryCode.PART1_ALPHA2;
      Set<String> set0 = Locale.getISOCountries(locale_IsoCountryCode0);
      BDTransportes bDTransportes0 = new BDTransportes(hashMap0, set0);
      Set<String> set1 = bDTransportes0.getCodigos();
      assertFalse(set1.isEmpty());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BDTransportes bDTransportes0 = new BDTransportes();
      // Undeclared exception!
      try { 
        bDTransportes0.updateTransportes2((EmpresaTransportes) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("BDTransportes", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BDTransportes bDTransportes0 = new BDTransportes();
      // Undeclared exception!
      try { 
        bDTransportes0.updateTransporte((EmpresaTransportes) null, 187.18905707373);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("BDTransportes", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EmpresaTransportes empresaTransportes0 = new EmpresaTransportes();
      ArrayList<Encomenda> arrayList0 = empresaTransportes0.getRota();
      EmpresaTransportes empresaTransportes1 = new EmpresaTransportes(">K", (String) null, ">K", ">K", (-2013265918), (-2013265918), ">K", 959.221194, 959.221194, 1.0, arrayList0, true, 1.0, (-2013265918), true, (-2013265918), 2503);
      HashMap<String, EmpresaTransportes> hashMap0 = new HashMap<String, EmpresaTransportes>();
      hashMap0.put("Total de Empresas de transporte: \n", empresaTransportes1);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      BDTransportes bDTransportes0 = new BDTransportes(hashMap0, linkedHashSet0);
      // Undeclared exception!
      try { 
        bDTransportes0.tryLogin("Total de Empresas de transporte: \n", "Total de Empresas de transporte: \n");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HashMap<String, EmpresaTransportes> hashMap0 = new HashMap<String, EmpresaTransportes>();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      ArrayList<Encomenda> arrayList0 = new ArrayList<Encomenda>();
      EmpresaTransportes empresaTransportes0 = new EmpresaTransportes(" -->", " -->", "", "", (-11), (-11), " -->", (-11), (-11), (-11), arrayList0, false, (-11), (-11), false, (-11), (-11));
      hashMap0.put("", empresaTransportes0);
      BDTransportes bDTransportes0 = new BDTransportes(hashMap0, linkedHashSet0);
      Loja loja0 = new Loja(" -->", "_", " -->", "-------------Lojas------------------------------\n", (-11), (-11), (-11), arrayList0, (-11));
      // Undeclared exception!
      try { 
        bDTransportes0.transDisponiveisMedParse(loja0, (Utilizador) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("BDTransportes", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BDTransportes bDTransportes0 = new BDTransportes();
      Loja loja0 = new Loja();
      EmpresaTransportes empresaTransportes0 = new EmpresaTransportes();
      bDTransportes0.updateTransporte(empresaTransportes0, 1720.725772);
      // Undeclared exception!
      try { 
        bDTransportes0.transDisponiveis(loja0, (Utilizador) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("BDTransportes", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BDTransportes bDTransportes0 = new BDTransportes();
      // Undeclared exception!
      try { 
        bDTransportes0.setTransportes((Map<String, EmpresaTransportes>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("BDTransportes", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BDTransportes bDTransportes0 = new BDTransportes();
      EmpresaTransportes empresaTransportes0 = new EmpresaTransportes();
      bDTransportes0.updateTransportes2(empresaTransportes0);
      Loja loja0 = new Loja();
      // Undeclared exception!
      try { 
        bDTransportes0.printEmpresasMed((Utilizador) null, loja0, 2193.08969);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("BDTransportes", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BDTransportes bDTransportes0 = new BDTransportes();
      EmpresaTransportes empresaTransportes0 = new EmpresaTransportes();
      bDTransportes0.updateTransportes2(empresaTransportes0);
      Utilizador utilizador0 = new Utilizador();
      // Undeclared exception!
      try { 
        bDTransportes0.printEmpresas(utilizador0, (Loja) null, 4489.533490896444);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("BDTransportes", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ArrayList<Encomenda> arrayList0 = new ArrayList<Encomenda>();
      EmpresaTransportes empresaTransportes0 = new EmpresaTransportes("M6l4`!1(", (String) null, (String) null, "M6l4`!1(", (-315859054), (-315859054), "M6l4`!1(", (-315859054), (-315859054), (-315859054), arrayList0, false, (-1318.71365827), 2146702556, false, 513, 2146702556);
      HashMap<String, EmpresaTransportes> hashMap0 = new HashMap<String, EmpresaTransportes>();
      hashMap0.put("M6l4`!1(", empresaTransportes0);
      Locale locale0 = Locale.KOREAN;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      BDTransportes bDTransportes0 = new BDTransportes(hashMap0, set0);
      // Undeclared exception!
      try { 
        bDTransportes0.getEmail("Desinfetante");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BDTransportes bDTransportes0 = new BDTransportes();
      // Undeclared exception!
      try { 
        bDTransportes0.existe((EmpresaTransportes) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("BDTransportes", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BDTransportes bDTransportes0 = new BDTransportes();
      // Undeclared exception!
      try { 
        bDTransportes0.add((EmpresaTransportes) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("BDTransportes", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HashMap<String, EmpresaTransportes> hashMap0 = new HashMap<String, EmpresaTransportes>();
      BDTransportes bDTransportes0 = null;
      try {
        bDTransportes0 = new BDTransportes(hashMap0, (Set<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      BDTransportes bDTransportes0 = null;
      try {
        bDTransportes0 = new BDTransportes((BDTransportes) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("BDTransportes", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      BDTransportes bDTransportes0 = new BDTransportes();
      // Undeclared exception!
      try { 
        bDTransportes0.setCodigos((Set<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      BDTransportes bDTransportes0 = new BDTransportes();
      Set<String> set0 = bDTransportes0.getCodigos();
      assertEquals(0, set0.size());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      BDTransportes bDTransportes0 = new BDTransportes();
      Map<String, EmpresaTransportes> map0 = bDTransportes0.getTransportes();
      assertTrue(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      BDTransportes bDTransportes0 = new BDTransportes();
      EmpresaTransportes empresaTransportes0 = new EmpresaTransportes();
      bDTransportes0.updateTransportes2(empresaTransportes0);
      try { 
        bDTransportes0.encontraEnc("}N2DY1) L8Sq");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("BDTransportes", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      HashMap<String, EmpresaTransportes> hashMap0 = new HashMap<String, EmpresaTransportes>();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      EmpresaTransportes empresaTransportes0 = new EmpresaTransportes();
      ArrayList<Encomenda> arrayList0 = empresaTransportes0.getRota();
      EmpresaTransportes empresaTransportes1 = new EmpresaTransportes("QEMGE%yY", "P", "^B_ySF`uR", "P", 0, 0.0, "P", 0.0, 0.2, 0.2, arrayList0, true, (-2444.0685936686878), 0, true, 0, 0);
      hashMap0.put("QEMGE%yY", empresaTransportes1);
      BDTransportes bDTransportes0 = new BDTransportes(hashMap0, linkedHashSet0);
      Utilizador utilizador0 = new Utilizador();
      Loja loja0 = new Loja();
      List<EmpresaTransportes> list0 = bDTransportes0.transDisponiveisMedParse(loja0, utilizador0);
      assertTrue(list0.contains(empresaTransportes1));
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      HashMap<String, EmpresaTransportes> hashMap0 = new HashMap<String, EmpresaTransportes>();
      BDUtilizador bDUtilizador0 = new BDUtilizador();
      Set<String> set0 = bDUtilizador0.getCodigos();
      EmpresaTransportes empresaTransportes0 = new EmpresaTransportes();
      ArrayList<Encomenda> arrayList0 = empresaTransportes0.getRota();
      EmpresaTransportes empresaTransportes1 = new EmpresaTransportes("EMG%Y", "EMG%Y", "dt", "EMG%Y", 0, 0.0, "EMG%Y", 0.0, 0.2, 0.2, arrayList0, true, (-2455.7153), 0, false, 0, 0);
      hashMap0.put("EMG%Y", empresaTransportes1);
      BDTransportes bDTransportes0 = new BDTransportes(hashMap0, set0);
      Loja loja0 = new Loja();
      Utilizador utilizador0 = new Utilizador("", "EMG%Y", "", "", 0.0, 0, arrayList0);
      List<EmpresaTransportes> list0 = bDTransportes0.transDisponiveisMedParse(loja0, utilizador0);
      assertFalse(list0.contains(empresaTransportes1));
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      EmpresaTransportes empresaTransportes0 = new EmpresaTransportes();
      ArrayList<Encomenda> arrayList0 = empresaTransportes0.getRota();
      Loja loja0 = new Loja("QEMGE%yY", "QEMGE%yY", "QEMGE%yY", "QEMGE%yY", 0.0, 0.0, 0.0, arrayList0, 0);
      BDTransportes bDTransportes0 = new BDTransportes();
      Utilizador utilizador0 = new Utilizador("QEMGE%yY", "\n", "QEMGE%yY", "\n", 0, 0.0, arrayList0);
      bDTransportes0.updateTransportes2(empresaTransportes0);
      List<EmpresaTransportes> list0 = bDTransportes0.transDisponiveisMedParse(loja0, utilizador0);
      assertFalse(list0.contains(empresaTransportes0));
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      HashMap<String, EmpresaTransportes> hashMap0 = new HashMap<String, EmpresaTransportes>();
      EmpresaTransportes empresaTransportes0 = new EmpresaTransportes();
      ArrayList<Encomenda> arrayList0 = empresaTransportes0.getRota();
      EmpresaTransportes empresaTransportes1 = new EmpresaTransportes("QEMGE%TY", "QEMGE%TY", "^B_2SF``R", "QEMGE%TY", 44, 44, "QEMGE%TY", 44, 44, 44, arrayList0, false, 44, 44, false, 44, 44);
      hashMap0.put("QEMGE%TY", empresaTransportes1);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      BDTransportes bDTransportes0 = new BDTransportes(hashMap0, linkedHashSet0);
      Loja loja0 = new Loja();
      Utilizador utilizador0 = new Utilizador("^B_2SF``R", "Latitude: ", "^B_2SF``R", "^B_2SF``R", 1518.915338571674, 0.0, arrayList0);
      List<EmpresaTransportes> list0 = bDTransportes0.transDisponiveisMedParse(loja0, utilizador0);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      HashMap<String, EmpresaTransportes> hashMap0 = new HashMap<String, EmpresaTransportes>();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      ArrayList<Encomenda> arrayList0 = new ArrayList<Encomenda>(0);
      EmpresaTransportes empresaTransportes0 = new EmpresaTransportes("QEMGE%yY", "QEMGE%yY", "", "", 0, 0, "QEMGE%yY", 0, 0, 0, arrayList0, true, 0, 0, true, 0, 0);
      hashMap0.put("", empresaTransportes0);
      BDTransportes bDTransportes0 = new BDTransportes(hashMap0, linkedHashSet0);
      Loja loja0 = new Loja();
      Utilizador utilizador0 = new Utilizador();
      List<EmpresaTransportes> list0 = bDTransportes0.transDisponiveis(loja0, utilizador0);
      assertTrue(list0.contains(empresaTransportes0));
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      HashMap<String, EmpresaTransportes> hashMap0 = new HashMap<String, EmpresaTransportes>();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      EmpresaTransportes empresaTransportes0 = new EmpresaTransportes();
      ArrayList<Encomenda> arrayList0 = new ArrayList<Encomenda>(0);
      hashMap0.put("", empresaTransportes0);
      BDTransportes bDTransportes0 = new BDTransportes(hashMap0, linkedHashSet0);
      Loja loja0 = new Loja("QEMGE%yY", " || RATE --> ", "0", "QMGE%yY", 0, 0, 784.1492307, arrayList0, 0);
      Utilizador utilizador0 = new Utilizador("QEMGE%yY", "QEMGE%yY", " || RATE --> ", "f", 0.0, 677.43536, arrayList0);
      List<EmpresaTransportes> list0 = bDTransportes0.transDisponiveis(loja0, utilizador0);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      BDTransportes bDTransportes0 = new BDTransportes();
      EmpresaTransportes empresaTransportes0 = new EmpresaTransportes();
      bDTransportes0.updateTransportes2(empresaTransportes0);
      ArrayList<Encomenda> arrayList0 = empresaTransportes0.getRegistos();
      Loja loja0 = new Loja("}N2DY1) L8Sq", "}N2DY1) L8Sq", "}N2DY1) L8Sq", "=SAvsT", 1729.25586, 53.0, 816.413468951, arrayList0, (-20569767));
      Utilizador utilizador0 = new Utilizador();
      List<EmpresaTransportes> list0 = bDTransportes0.transDisponiveis(loja0, utilizador0);
      assertFalse(list0.contains(empresaTransportes0));
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      HashMap<String, EmpresaTransportes> hashMap0 = new HashMap<String, EmpresaTransportes>();
      EmpresaTransportes empresaTransportes0 = new EmpresaTransportes();
      ArrayList<Encomenda> arrayList0 = empresaTransportes0.getRota();
      EmpresaTransportes empresaTransportes1 = new EmpresaTransportes("QEMGE%yY", "QEMGE%yY", "^B_ySF`uR", "QEMGE%yY", 0, 0.0, "QEMGE%yY", 0.0, 0.0, 0.0, arrayList0, true, 0.0, 0, false, 0, 0);
      hashMap0.put("QEMGE%yY", empresaTransportes1);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      BDTransportes bDTransportes0 = new BDTransportes(hashMap0, linkedHashSet0);
      Utilizador utilizador0 = new Utilizador();
      Loja loja0 = new Loja();
      String string0 = bDTransportes0.printEmpresasMed(utilizador0, loja0, 0);
      assertEquals("0", string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      HashMap<String, EmpresaTransportes> hashMap0 = new HashMap<String, EmpresaTransportes>();
      BDUtilizador bDUtilizador0 = new BDUtilizador();
      Set<String> set0 = bDUtilizador0.getCodigos();
      EmpresaTransportes empresaTransportes0 = new EmpresaTransportes();
      ArrayList<Encomenda> arrayList0 = empresaTransportes0.getRota();
      EmpresaTransportes empresaTransportes1 = new EmpresaTransportes("N\u00E3o existem encomendas por entregar\n", "QEMGE%k,yY", ":", ":", (-18), (-216.0), "'C5g\u0006=5Z", 0.0, 0.2, 784.1492307, arrayList0, true, 25.459537633016325, (-815), true, 45, 0);
      hashMap0.put("}HOhvooZ(^", empresaTransportes1);
      BDTransportes bDTransportes0 = new BDTransportes(hashMap0, set0);
      Utilizador utilizador0 = new Utilizador();
      Loja loja0 = new Loja();
      String string0 = bDTransportes0.printEmpresasMed(utilizador0, loja0, 1887.17814);
      assertEquals(": ---> : || RATE --> 25.459537633016325 || CUSTO: 334.235628\n", string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      BDTransportes bDTransportes0 = new BDTransportes();
      EmpresaTransportes empresaTransportes0 = new EmpresaTransportes();
      bDTransportes0.updateTransportes2(empresaTransportes0);
      Loja loja0 = new Loja();
      ArrayList<Encomenda> arrayList0 = empresaTransportes0.getRota();
      Utilizador utilizador0 = new Utilizador(" || CUSTO: ", "fSFw;\"x", "/(COoC#g", " <--- O utilizador \u00E9: \n", 1402.0, 1402.0, arrayList0);
      String string0 = bDTransportes0.printEmpresasMed(utilizador0, loja0, 2444.0685936686878);
      assertEquals("0", string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      HashMap<String, EmpresaTransportes> hashMap0 = new HashMap<String, EmpresaTransportes>();
      EmpresaTransportes empresaTransportes0 = new EmpresaTransportes();
      ArrayList<Encomenda> arrayList0 = empresaTransportes0.getRota();
      EmpresaTransportes empresaTransportes1 = new EmpresaTransportes("QEMGE%TY", "QEMGE%TY", "^B_2SF``R", "QEMGE%TY", 48, 48, "QEMGE%TY", 48, 48, 48, arrayList0, false, 48, 48, false, 48, 48);
      hashMap0.put("QEMGE%TY", empresaTransportes1);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      BDTransportes bDTransportes0 = new BDTransportes(hashMap0, linkedHashSet0);
      Utilizador utilizador0 = new Utilizador();
      Loja loja0 = new Loja();
      String string0 = bDTransportes0.printEmpresasMed(utilizador0, loja0, 48);
      assertEquals("0", string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      HashMap<String, EmpresaTransportes> hashMap0 = new HashMap<String, EmpresaTransportes>();
      EmpresaTransportes empresaTransportes0 = new EmpresaTransportes();
      hashMap0.put("QEMGE%TY", empresaTransportes0);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      BDTransportes bDTransportes0 = new BDTransportes(hashMap0, linkedHashSet0);
      Utilizador utilizador0 = new Utilizador();
      Loja loja0 = new Loja();
      String string0 = bDTransportes0.printEmpresasMed(utilizador0, loja0, 48);
      assertEquals("0", string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      HashMap<String, EmpresaTransportes> hashMap0 = new HashMap<String, EmpresaTransportes>();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      EmpresaTransportes empresaTransportes0 = new EmpresaTransportes();
      hashMap0.put("^B_ySF`uR", empresaTransportes0);
      BDTransportes bDTransportes0 = new BDTransportes(hashMap0, linkedHashSet0);
      Utilizador utilizador0 = new Utilizador();
      Loja loja0 = new Loja();
      String string0 = bDTransportes0.printEmpresas(utilizador0, loja0, 2272.524);
      assertEquals("0", string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      HashMap<String, EmpresaTransportes> hashMap0 = new HashMap<String, EmpresaTransportes>();
      EmpresaTransportes empresaTransportes0 = new EmpresaTransportes();
      ArrayList<Encomenda> arrayList0 = empresaTransportes0.getRota();
      EmpresaTransportes empresaTransportes1 = new EmpresaTransportes("QEFGE%TY", "QEFGE%TY", "QEFGE%TY", "QEFGE%TY", 48, 48, "QEFGE%TY", 48, 48, 48, arrayList0, false, 48, 48, false, 48, 48);
      hashMap0.put("QEFGE%TY", empresaTransportes1);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      BDTransportes bDTransportes0 = new BDTransportes(hashMap0, linkedHashSet0);
      Utilizador utilizador0 = new Utilizador("QEFGE%TY", "O?\"vl53Z#_s[0\"u", ",", "qhciZ5WgohgJM", 48, 48, arrayList0);
      Loja loja0 = new Loja();
      String string0 = bDTransportes0.printEmpresas(utilizador0, loja0, 48);
      assertEquals("0", string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      HashMap<String, EmpresaTransportes> hashMap0 = new HashMap<String, EmpresaTransportes>();
      EmpresaTransportes empresaTransportes0 = new EmpresaTransportes();
      ArrayList<Encomenda> arrayList0 = empresaTransportes0.getRota();
      hashMap0.put("QEFGE%TY", empresaTransportes0);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      BDTransportes bDTransportes0 = new BDTransportes(hashMap0, linkedHashSet0);
      Utilizador utilizador0 = new Utilizador("QEFGE%TY", "O?\"vl53Z#_s[0\"u", ",", "qhciZ5WgohgJM", 48, 48, arrayList0);
      Loja loja0 = new Loja();
      String string0 = bDTransportes0.printEmpresas(utilizador0, loja0, 48);
      assertEquals("0", string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      HashMap<String, EmpresaTransportes> hashMap0 = new HashMap<String, EmpresaTransportes>();
      EmpresaTransportes empresaTransportes0 = new EmpresaTransportes();
      hashMap0.put("QEMGE%TY", empresaTransportes0);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      BDTransportes bDTransportes0 = new BDTransportes(hashMap0, linkedHashSet0);
      try { 
        bDTransportes0.getEmail("Latitude: ");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("BDTransportes", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      HashMap<String, EmpresaTransportes> hashMap0 = new HashMap<String, EmpresaTransportes>();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      ArrayList<Encomenda> arrayList0 = new ArrayList<Encomenda>();
      EmpresaTransportes empresaTransportes0 = new EmpresaTransportes("gEEMGE%yY", "gEEMGE%yY", "f", "f", (-1), (-1), "gEEMGE%yY", (-1), (-1), (-1), arrayList0, true, (-1), (-1), true, (-1), (-1));
      hashMap0.put("gEEMGE%yY", empresaTransportes0);
      BDTransportes bDTransportes0 = new BDTransportes(hashMap0, linkedHashSet0);
      String string0 = bDTransportes0.getEmail("f");
      assertEquals("gEEMGE%yY", string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      BDTransportes bDTransportes0 = new BDTransportes();
      EmpresaTransportes empresaTransportes0 = new EmpresaTransportes();
      bDTransportes0.updateTransportes2(empresaTransportes0);
      String string0 = bDTransportes0.printTransportes();
      assertEquals(" --->  || RATE --> 0.0\n", string0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      BDTransportes bDTransportes0 = new BDTransportes();
      String string0 = bDTransportes0.printTransportes();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      HashMap<String, EmpresaTransportes> hashMap0 = new HashMap<String, EmpresaTransportes>();
      EmpresaTransportes empresaTransportes0 = new EmpresaTransportes();
      hashMap0.put("QEMGE%TY", empresaTransportes0);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      BDTransportes bDTransportes0 = new BDTransportes(hashMap0, linkedHashSet0);
      EmpresaTransportes empresaTransportes1 = bDTransportes0.tryLogin("QEMGE%TY", "^B_2SF``R");
      assertNull(empresaTransportes1);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      BDTransportes bDTransportes0 = new BDTransportes();
      EmpresaTransportes empresaTransportes0 = bDTransportes0.tryLogin("UB+^d%&OV", " w|e");
      assertNull(empresaTransportes0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      HashMap<String, EmpresaTransportes> hashMap0 = new HashMap<String, EmpresaTransportes>();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      ArrayList<Encomenda> arrayList0 = new ArrayList<Encomenda>();
      EmpresaTransportes empresaTransportes0 = new EmpresaTransportes("gEEMGE%yY", "gEEMGE%yY", "f", "f", (-1), (-1), "gEEMGE%yY", (-1), (-1), (-1), arrayList0, true, (-1), (-1), true, (-1), (-1));
      hashMap0.put("gEEMGE%yY", empresaTransportes0);
      BDTransportes bDTransportes0 = new BDTransportes(hashMap0, linkedHashSet0);
      EmpresaTransportes empresaTransportes1 = bDTransportes0.tryLogin("gEEMGE%yY", "gEEMGE%yY");
      assertEquals("gEEMGE%yY", empresaTransportes1.getPassword());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      HashMap<String, EmpresaTransportes> hashMap0 = new HashMap<String, EmpresaTransportes>();
      EmpresaTransportes empresaTransportes0 = new EmpresaTransportes();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      BDTransportes bDTransportes0 = new BDTransportes(hashMap0, linkedHashSet0);
      boolean boolean0 = bDTransportes0.existe(empresaTransportes0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      HashMap<String, EmpresaTransportes> hashMap0 = new HashMap<String, EmpresaTransportes>();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      ArrayList<Encomenda> arrayList0 = new ArrayList<Encomenda>();
      EmpresaTransportes empresaTransportes0 = new EmpresaTransportes(" ---> ", " ---> ", "", "", 5, 5, " ---> ", 5, 5, 5, arrayList0, true, 5, 5, true, 5, 5);
      hashMap0.put("", empresaTransportes0);
      BDTransportes bDTransportes0 = new BDTransportes(hashMap0, linkedHashSet0);
      boolean boolean0 = bDTransportes0.existeEmail("");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      BDTransportes bDTransportes0 = new BDTransportes();
      boolean boolean0 = bDTransportes0.existeEmail("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      BDTransportes bDTransportes0 = new BDTransportes();
      boolean boolean0 = bDTransportes0.equals("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      BDTransportes bDTransportes0 = new BDTransportes();
      boolean boolean0 = bDTransportes0.equals(bDTransportes0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      BDTransportes bDTransportes0 = new BDTransportes();
      boolean boolean0 = bDTransportes0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      HashMap<String, EmpresaTransportes> hashMap0 = new HashMap<String, EmpresaTransportes>();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      BDTransportes bDTransportes0 = new BDTransportes(hashMap0, linkedHashSet0);
      boolean boolean0 = bDTransportes0.existeCodigo(" <--- O utilizador : \n");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      BDTransportes bDTransportes0 = new BDTransportes();
      EmpresaTransportes empresaTransportes0 = new EmpresaTransportes();
      bDTransportes0.add(empresaTransportes0);
      String string0 = bDTransportes0.getEmail("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      BDTransportes bDTransportes0 = new BDTransportes();
      BDTransportes bDTransportes1 = bDTransportes0.clone();
      assertNotSame(bDTransportes0, bDTransportes1);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      BDTransportes bDTransportes0 = new BDTransportes();
      BDTransportes bDTransportes1 = new BDTransportes(bDTransportes0);
      boolean boolean0 = bDTransportes1.equals(bDTransportes0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      BDTransportes bDTransportes0 = new BDTransportes();
      EmpresaTransportes empresaTransportes0 = new EmpresaTransportes();
      bDTransportes0.updateTransportes2(empresaTransportes0);
      boolean boolean0 = bDTransportes0.existe(empresaTransportes0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      BDTransportes bDTransportes0 = new BDTransportes();
      String string0 = bDTransportes0.toString();
      assertEquals("Total de Empresas de transporte: \n{}", string0);
  }
}
