/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 11 23:42:13 GMT 2021
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BDLojas_ESTest extends BDLojas_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BDLojas bDLojas0 = new BDLojas();
      Loja loja0 = new Loja();
      ArrayList<Encomenda> arrayList0 = loja0.getEncomendas_recebidas();
      Loja loja1 = new Loja("FcDH@gm", "FcDH@gm", "Desinfetante", "FcDH@gm", (-2729.96338), 0.0, 0.0, arrayList0, 1);
      bDLojas0.updateLoja3(loja1);
      Loja loja2 = bDLojas0.tryLogin("FcDH@gm", "FcDH@gm");
      assertEquals("FcDH@gm", loja2.getPassword());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BDLojas bDLojas0 = new BDLojas();
      Loja loja0 = new Loja();
      ArrayList<Encomenda> arrayList0 = loja0.getEncomendas_recebidas();
      Loja loja1 = new Loja("jT7C,p", "jT7C,p", "qBwEtdo,01KQkqgVl", "jT7C,p", 1.0, 1.0, 1.0, arrayList0, (-2091));
      bDLojas0.updateLoja3(loja1);
      Loja loja2 = bDLojas0.tryLogin("jT7C,p", "jT7C,p");
      assertEquals("Loja", loja2.getTypeUser());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BDLojas bDLojas0 = new BDLojas();
      Loja loja0 = new Loja();
      ArrayList<Encomenda> arrayList0 = loja0.getEncomendas_recebidas();
      Loja loja1 = new Loja("js7C,p", "js7C,p", "@e0PRDb)CN!,", "js7C,p", (-2729.96338), (-1.0), (-522.339798), arrayList0, (-1908874351));
      bDLojas0.updateLoja3(loja1);
      Loja loja2 = bDLojas0.tryLogin("js7C,p", "js7C,p");
      assertEquals((-1.0), loja2.getLatitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BDLojas bDLojas0 = new BDLojas();
      Loja loja0 = new Loja();
      bDLojas0.updateLoja3(loja0);
      Map<String, Loja> map0 = bDLojas0.getLojas();
      assertEquals(1, map0.size());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BDLojas bDLojas0 = new BDLojas();
      Loja loja0 = new Loja();
      ArrayList<Encomenda> arrayList0 = loja0.getEncomendas_recebidas();
      Loja loja1 = new Loja((String) null, "Desinfetante", "t\f<_N7};hD", "t\f<_N7};hD", (-2729.96338), (-2729.96338), (-2729.96338), arrayList0, 1);
      bDLojas0.updateLoja3(loja1);
      String string0 = bDLojas0.getEmail("t\f<_N7};hD");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HashMap<String, Loja> hashMap0 = new HashMap<String, Loja>();
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      BDLojas bDLojas0 = new BDLojas(hashMap0, set0);
      Set<String> set1 = bDLojas0.getCodigos();
      assertTrue(set1.equals((Object)set0));
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BDLojas bDLojas0 = new BDLojas();
      // Undeclared exception!
      try { 
        bDLojas0.updateLoja3((Loja) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("BDLojas", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BDLojas bDLojas0 = new BDLojas();
      Encomenda encomenda0 = new Encomenda();
      // Undeclared exception!
      try { 
        bDLojas0.updateLoja2(encomenda0, (Loja) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("BDLojas", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BDLojas bDLojas0 = new BDLojas();
      Encomenda encomenda0 = new Encomenda();
      // Undeclared exception!
      try { 
        bDLojas0.updateLoja(encomenda0, (Loja) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("BDLojas", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BDLojas bDLojas0 = new BDLojas();
      Loja loja0 = new Loja();
      ArrayList<Encomenda> arrayList0 = loja0.getEncomendas_recebidas();
      Loja loja1 = new Loja("Nome da loja: ", (String) null, "_hYI!6sz!Wk", "DesinfetantTe", 3938.718779970438, (-1735.3581973461073), (-193.0176476734254), arrayList0, 1);
      bDLojas0.updateLoja3(loja1);
      // Undeclared exception!
      try { 
        bDLojas0.tryLogin("Nome da loja: ", " --> ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BDLojas bDLojas0 = new BDLojas();
      // Undeclared exception!
      try { 
        bDLojas0.setLojas((Map<String, Loja>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("BDLojas", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BDLojas bDLojas0 = new BDLojas();
      // Undeclared exception!
      try { 
        bDLojas0.setCodigos((Set<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.TreeSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BDLojas bDLojas0 = new BDLojas();
      Loja loja0 = new Loja();
      bDLojas0.updateLoja3(loja0);
      // Undeclared exception!
      try { 
        bDLojas0.listLojasUser((Utilizador) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("BDLojas", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BDLojas bDLojas0 = new BDLojas();
      Loja loja0 = new Loja();
      ArrayList<Encomenda> arrayList0 = loja0.getEncomendas_recebidas();
      Loja loja1 = new Loja("qBwEtdo,01KQkqgVl", "qBwEtdo,01KQkqgVl", (String) null, "qBwEtdo,01KQkqgVl", 0.050549958410912796, 0.050549958410912796, 1.0, arrayList0, 1);
      bDLojas0.updateLoja3(loja1);
      // Undeclared exception!
      try { 
        bDLojas0.getEmail("qBwEtdo,01KQkqgVl");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BDLojas bDLojas0 = new BDLojas();
      // Undeclared exception!
      try { 
        bDLojas0.existe((Loja) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("BDLojas", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BDLojas bDLojas0 = new BDLojas();
      // Undeclared exception!
      try { 
        bDLojas0.add((Loja) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("BDLojas", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HashMap<String, Loja> hashMap0 = new HashMap<String, Loja>();
      BDLojas bDLojas0 = null;
      try {
        bDLojas0 = new BDLojas(hashMap0, (Set<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.TreeSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BDLojas bDLojas0 = null;
      try {
        bDLojas0 = new BDLojas((BDLojas) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("BDLojas", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BDLojas bDLojas0 = new BDLojas();
      BDLojas bDLojas1 = new BDLojas(bDLojas0);
      assertTrue(bDLojas1.equals((Object)bDLojas0));
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HashMap<String, Loja> hashMap0 = new HashMap<String, Loja>();
      BDLojas bDLojas0 = new BDLojas();
      bDLojas0.setLojas(hashMap0);
      assertTrue(hashMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BDLojas bDLojas0 = new BDLojas();
      Map<String, Loja> map0 = bDLojas0.getLojas();
      assertTrue(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BDLojas bDLojas0 = new BDLojas();
      Set<String> set0 = bDLojas0.getCodigos();
      bDLojas0.setCodigos(set0);
      assertEquals(0, set0.size());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      BDLojas bDLojas0 = new BDLojas();
      Loja loja0 = new Loja();
      bDLojas0.add(loja0);
      try { 
        bDLojas0.getEmail("@");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("BDLojas", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      BDLojas bDLojas0 = new BDLojas();
      Loja loja0 = new Loja();
      bDLojas0.updateLoja3(loja0);
      String string0 = bDLojas0.getEmail("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      BDLojas bDLojas0 = new BDLojas();
      Loja loja0 = new Loja();
      bDLojas0.updateLoja3(loja0);
      ArrayList<Encomenda> arrayList0 = loja0.getEncomendas_recebidas();
      Utilizador utilizador0 = new Utilizador("M/E.O_+Evgw", "0.>RM", "", "", (-1.0), 1081.9301, arrayList0);
      String string0 = bDLojas0.listLojasUser(utilizador0);
      assertEquals("LISTA DE LOJAS\n -->  ----> DIST:  1081.9305621369654 KMS\n", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      BDLojas bDLojas0 = new BDLojas();
      Loja loja0 = new Loja();
      bDLojas0.updateLoja3(loja0);
      Loja loja1 = bDLojas0.tryLogin("", "");
      assertEquals("", loja1.getNome());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      BDLojas bDLojas0 = new BDLojas();
      Loja loja0 = bDLojas0.tryLogin("{pAW", "Encomenda");
      assertNull(loja0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      BDLojas bDLojas0 = new BDLojas();
      Loja loja0 = new Loja();
      bDLojas0.updateLoja3(loja0);
      Loja loja1 = bDLojas0.tryLogin("", "M/E.O_+Evgw");
      assertNull(loja1);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      BDLojas bDLojas0 = new BDLojas();
      boolean boolean0 = bDLojas0.existeCodigo("M/E.O_+Evgw");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      BDLojas bDLojas0 = new BDLojas();
      boolean boolean0 = bDLojas0.existeEmail("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      BDLojas bDLojas0 = new BDLojas();
      Loja loja0 = new Loja();
      boolean boolean0 = bDLojas0.existe(loja0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      BDLojas bDLojas0 = new BDLojas();
      BDLojas bDLojas1 = new BDLojas();
      boolean boolean0 = bDLojas0.equals(bDLojas1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      BDLojas bDLojas0 = new BDLojas();
      boolean boolean0 = bDLojas0.equals("n/PYE^zS");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      BDLojas bDLojas0 = new BDLojas();
      boolean boolean0 = bDLojas0.equals(bDLojas0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      BDLojas bDLojas0 = new BDLojas();
      boolean boolean0 = bDLojas0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      BDLojas bDLojas0 = new BDLojas();
      Loja loja0 = new Loja();
      bDLojas0.add(loja0);
      boolean boolean0 = bDLojas0.existeCodigo("");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      BDLojas bDLojas0 = new BDLojas();
      String string0 = bDLojas0.toString();
      assertEquals("Total de Lojas: \n{}", string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      BDLojas bDLojas0 = new BDLojas();
      ArrayList<Encomenda> arrayList0 = new ArrayList<Encomenda>();
      Loja loja0 = new Loja("Vendedor: ", "Vendedor: ", "xH[{eE-?^Fw.zB", "xH[{eE-?^Fw.zB", 139.976099302, (-2999.1524), (-2999.1524), arrayList0, (-1717986916));
      bDLojas0.updateLoja2((Encomenda) null, loja0);
      String string0 = bDLojas0.getEmail("xH[{eE-?^Fw.zB");
      assertEquals("Vendedor: ", string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      BDLojas bDLojas0 = new BDLojas();
      Encomenda encomenda0 = new Encomenda();
      Loja loja0 = new Loja();
      bDLojas0.updateLoja(encomenda0, loja0);
      boolean boolean0 = bDLojas0.existeEmail("");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      BDLojas bDLojas0 = new BDLojas();
      Loja loja0 = new Loja();
      bDLojas0.updateLoja3(loja0);
      boolean boolean0 = bDLojas0.existe(loja0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      BDLojas bDLojas0 = new BDLojas();
      BDLojas bDLojas1 = bDLojas0.clone();
      assertTrue(bDLojas1.equals((Object)bDLojas0));
  }
}
